// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: queries.sql

package rdbms

import (
	"context"
)

const checkStockExist = `-- name: CheckStockExist :one
SELECT EXISTS(SELECT 1 FROM stock WHERE stock_id = (?))
`

func (q *Queries) CheckStockExist(ctx context.Context, stockID string) (bool, error) {
	row := q.db.QueryRowContext(ctx, checkStockExist, stockID)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}

const createAccessInfo = `-- name: CreateAccessInfo :exec
INSERT INTO access_log (connected_at) VALUES (NOW())
`

func (q *Queries) CreateAccessInfo(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, createAccessInfo)
	return err
}

const getStockOrigin = `-- name: GetStockOrigin :one
SELECT fetch_origin FROM stock WHERE stock_id = (?)
`

func (q *Queries) GetStockOrigin(ctx context.Context, stockID string) (string, error) {
	row := q.db.QueryRowContext(ctx, getStockOrigin, stockID)
	var fetch_origin string
	err := row.Scan(&fetch_origin)
	return fetch_origin, err
}
